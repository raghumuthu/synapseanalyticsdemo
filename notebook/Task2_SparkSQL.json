{
	"name": "Task2_SparkSQL",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Sparkpool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "04ee68a8-34a8-44e6-af9a-2056397f11b0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c0675ddc-d867-4b54-abe8-24d506dffc0e/resourceGroups/DataMigrationService/providers/Microsoft.Synapse/workspaces/synw-ae-demo/bigDataPools/Sparkpool01",
				"name": "Sparkpool01",
				"type": "Spark",
				"endpoint": "https://synw-ae-demo.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://wwi@syndlsaedemo.dfs.core.windows.net/factsale-parquet/2012/Q1/InvoiceDateKey=2012-01-01/part-00012-891e9630-f2fc-4784-a4f7-1ed18677fa82.c000.snappy.parquet', format='parquet')\r\n",
					"display(df.limit(100))"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"data_path = spark.read.load(\r\n",
					"   'abfss://wwi@syndlsaedemo.dfs.core.windows.net/factsale-csv/2012/Q1/*/*',\r\n",
					"   format='csv',\r\n",
					"   sep=\"|\",\r\n",
					"   header=True)\r\n",
					"\r\n",
					"display(data_path.limit(100))"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.conf.set(\"spark.sql.adaptive.enabled\", \"true\")\r\n",
					"spark.conf.set(\"spark.sql.adaptive.coalescePartitions.enabled\", \"true\")\r\n",
					"spark.conf.set(\"spark.sql.adaptive.coalescePartitions.minPartitionNum\", 4)\r\n",
					"spark.conf.set(\"spark.sql.ansi.enabled\", \"true\")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT \r\n",
					"    CityKey,\r\n",
					"    SUM(Quantity) FILTER (WHERE CustomerKey != 0) as TotalQuantity,\r\n",
					"    COUNT(DISTINCT StockItemKey) as UniqueItems\r\n",
					"FROM delta.`abfss://wwi@syndlsaedemo.dfs.core.windows.net/factsale-deltalake`\r\n",
					"WHERE InvoiceYear=2012\r\n",
					"    and InvoiceQuarter=1\r\n",
					"GROUP BY CityKey\r\n",
					"ORDER BY TotalQuantity desc\r\n",
					"LIMIT 10"
				],
				"execution_count": 5
			}
		]
	}
}